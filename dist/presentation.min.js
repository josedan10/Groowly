!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/testing/site/",n(n.s=22)}({1:function(e,t,n){"use strict";e.exports=n(11)},11:function(e,t,n){"use strict";var r=n(9),o=n(8),a=n(5),c="function"==typeof Symbol&&Symbol.for,l=c?Symbol.for("react.element"):60103,s=c?Symbol.for("react.call"):60104,i=c?Symbol.for("react.return"):60105,u=c?Symbol.for("react.portal"):60106,f=c?Symbol.for("react.fragment"):60107,p="function"==typeof Symbol&&Symbol.iterator;function d(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw(t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.")).name="Invariant Violation",t.framesToPop=1,t}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function y(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||m}function h(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||m}function v(){}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&d("85"),this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=y.prototype;var b=h.prototype=new v;function g(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||m}b.constructor=h,r(b,y.prototype),b.isPureReactComponent=!0;var E=g.prototype=new v;E.constructor=g,r(E,y.prototype),E.unstable_isAsyncReactComponent=!0,E.render=function(){return this.props.children};var O={current:null},_=Object.prototype.hasOwnProperty,k={key:!0,ref:!0,__self:!0,__source:!0};function j(e,t,n){var r,o={},a=null,c=null;if(null!=t)for(r in void 0!==t.ref&&(c=t.ref),void 0!==t.key&&(a=""+t.key),t)_.call(t,r)&&!k.hasOwnProperty(r)&&(o[r]=t[r]);var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){for(var i=Array(s),u=0;u<s;u++)i[u]=arguments[u+2];o.children=i}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===o[r]&&(o[r]=s[r]);return{$$typeof:l,type:e,key:a,ref:c,props:o,_owner:O.current}}function w(e){return"object"==typeof e&&null!==e&&e.$$typeof===l}var C=/\/+/g,N=[];function P(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function x(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function L(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case l:case s:case i:case u:a=!0}}if(a)return n(r,e,""===t?"."+S(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var c=0;c<e.length;c++){var f=t+S(o=e[c],c);a+=L(o,f,n,r)}else if(null===e||void 0===e?f=null:f="function"==typeof(f=p&&e[p]||e["@@iterator"])?f:null,"function"==typeof f)for(e=f.call(e),c=0;!(o=e.next()).done;)a+=L(o=o.value,f=t+S(o,c++),n,r);else"object"===o&&d("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return a}function S(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function R(e,t){e.func.call(e.context,t,e.count++)}function A(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?B(e,r,n,a.thatReturnsArgument):null!=e&&(w(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(C,"$&/")+"/")+n,e={$$typeof:l,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function B(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(C,"$&/")+"/"),t=P(t,a,r,o),null==e||L(e,"",A,t),x(t)}var T={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return B(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=P(null,null,t,n),null==e||L(e,"",R,t),x(t)},count:function(e){return null==e?0:L(e,"",a.thatReturnsNull,null)},toArray:function(e){var t=[];return B(e,t,null,a.thatReturnsArgument),t},only:function(e){return w(e)||d("143"),e}},Component:y,PureComponent:h,unstable_AsyncComponent:g,Fragment:f,createElement:j,cloneElement:function(e,t,n){var o=r({},e.props),a=e.key,c=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(c=t.ref,s=O.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var i=e.type.defaultProps;for(u in t)_.call(t,u)&&!k.hasOwnProperty(u)&&(o[u]=void 0===t[u]&&void 0!==i?i[u]:t[u])}var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){i=Array(u);for(var f=0;f<u;f++)i[f]=arguments[f+2];o.children=i}return{$$typeof:l,type:e.type,key:a,ref:c,props:o,_owner:s}},createFactory:function(e){var t=j.bind(null,e);return t.type=e,t},isValidElement:w,version:"16.2.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:O,assign:r}},$=Object.freeze({default:T}),I=$&&T||$;e.exports=I.default?I.default:I},22:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(1),c=(r=a)&&r.__esModule?r:{default:r};function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var u=function(e){function t(e){return l(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return i(t,c.default.Component),o(t,[{key:"cambiarVista",value:function(e){var t=document.getElementsByClassName("view-screen"),n=void 0,r=document.getElementsByClassName("display-content"),o=void 0;if(document.getElementById("teamTitle").classList.remove("show"),document.getElementById("teamTitle").classList.add("hide"),r[0]){r[0].classList.add("reduce-content"),r[0].classList.remove("display-content"),document.getElementsByClassName("target")[0].classList.remove("target"),e.target.classList.add("target");for(var a=0;a<t.length;a++)if(t[a].classList.contains("target")){n=a;break}document.getElementsByClassName("content-container")[n].classList.remove("reduce-content"),document.getElementsByClassName("content-container")[n].classList.add("display-content")}else{e.target.classList.add("target");for(var c=0;c<t.length;c++)if(t[c].classList.contains("target")){n=c;break}for(document.getElementsByClassName("content-container")[n].classList.remove("default-content"),document.getElementsByClassName("content-container")[n].classList.add("display-content"),o=document.getElementsByClassName("default-content");o.length>0;)o[0].classList.add("reduce-content"),o[0].classList.remove("default-content")}}},{key:"render",value:function(){var e=this,t=0;return c.default.createElement("div",{className:"presentation-container flex-center"},c.default.createElement("h1",{id:"teamTitle"},"APRENDE, TRANSFORMA Y CONECTA"),c.default.createElement("div",{className:"flex-presentation"},this.props.datos.map(function(n){return c.default.createElement(f,{datos:n,key:n.nombre+t++,onClick:e.cambiarVista.bind(e)})})))}}]),t}();t.default=u;var f=function(e){function t(e){return l(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return i(t,c.default.Component),o(t,[{key:"cerrarVista",value:function(){var e=document.getElementsByClassName("display-content"),t=document.getElementsByClassName("reduce-content");for(e[0].classList.add("default-content"),e[0].classList.remove("display-content");t.length>0;)t[0].classList.add("default-content"),t[0].classList.remove("reduce-content");document.getElementsByClassName("target")[0].classList.remove("target"),document.getElementById("teamTitle").classList.remove("hide"),document.getElementById("teamTitle").classList.add("show")}},{key:"render",value:function(){return c.default.createElement("div",{className:"content-container default-content"},c.default.createElement("div",{className:"view-content"},c.default.createElement("div",{className:"img",style:{backgroundImage:"url("+this.props.datos.img+")"}}),c.default.createElement("div",{className:"content"},c.default.createElement("i",{className:"icon icon-arrow_back",onClick:this.cerrarVista}),c.default.createElement("div",{className:"info"},c.default.createElement("h2",null,this.props.datos.nombre),c.default.createElement("h3",null,this.props.datos.cargo),c.default.createElement("p",null,this.props.datos.descripcion)),c.default.createElement("div",{className:"redes"}),c.default.createElement("div",{className:"logo"}))),c.default.createElement("div",{className:"view-screen",onClick:this.props.onClick}))}}]),t}()},5:function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},8:function(e,t,n){"use strict";e.exports={}},9:function(e,t,n){"use strict";var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,c,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),s=1;s<arguments.length;s++){for(var i in n=Object(arguments[s]))o.call(n,i)&&(l[i]=n[i]);if(r){c=r(n);for(var u=0;u<c.length;u++)a.call(n,c[u])&&(l[c[u]]=n[c[u]])}}return l}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,