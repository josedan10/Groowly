!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/testing/site/dist/",n(n.s=22)}({1:function(e,t,n){"use strict";e.exports=n(11)},11:function(e,t,n){"use strict";var r=n(9),o=n(8),a=n(5),c="function"==typeof Symbol&&Symbol.for,l=c?Symbol.for("react.element"):60103,s=c?Symbol.for("react.call"):60104,i=c?Symbol.for("react.return"):60105,u=c?Symbol.for("react.portal"):60106,f=c?Symbol.for("react.fragment"):60107,p="function"==typeof Symbol&&Symbol.iterator;function d(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw(t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.")).name="Invariant Violation",t.framesToPop=1,t}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function y(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||m}function h(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||m}function v(){}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&d("85"),this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=y.prototype;var b=h.prototype=new v;function g(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||m}b.constructor=h,r(b,y.prototype),b.isPureReactComponent=!0;var E=g.prototype=new v;E.constructor=g,r(E,y.prototype),E.unstable_isAsyncReactComponent=!0,E.render=function(){return this.props.children};var O={current:null},_=Object.prototype.hasOwnProperty,k={key:!0,ref:!0,__self:!0,__source:!0};function j(e,t,n){var r,o={},a=null,c=null;if(null!=t)for(r in void 0!==t.ref&&(c=t.ref),void 0!==t.key&&(a=""+t.key),t)_.call(t,r)&&!k.hasOwnProperty(r)&&(o[r]=t[r]);var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){for(var i=Array(s),u=0;u<s;u++)i[u]=arguments[u+2];o.children=i}if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===o[r]&&(o[r]=s[r]);return{$$typeof:l,type:e,key:a,ref:c,props:o,_owner:O.current}}function w(e){return"object"==typeof e&&null!==e&&e.$$typeof===l}var N=/\/+/g,C=[];function x(e,t,n,r){if(C.length){var o=C.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function P(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>C.length&&C.push(e)}function L(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case l:case s:case i:case u:a=!0}}if(a)return n(r,e,""===t?"."+S(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var c=0;c<e.length;c++){var f=t+S(o=e[c],c);a+=L(o,f,n,r)}else if(null===e||void 0===e?f=null:f="function"==typeof(f=p&&e[p]||e["@@iterator"])?f:null,"function"==typeof f)for(e=f.call(e),c=0;!(o=e.next()).done;)a+=L(o=o.value,f=t+S(o,c++),n,r);else"object"===o&&d("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return a}function S(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function R(e,t){e.func.call(e.context,t,e.count++)}function A(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?B(e,r,n,a.thatReturnsArgument):null!=e&&(w(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n,e={$$typeof:l,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function B(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(N,"$&/")+"/"),t=x(t,a,r,o),null==e||L(e,"",A,t),P(t)}var T={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return B(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=x(null,null,t,n),null==e||L(e,"",R,t),P(t)},count:function(e){return null==e?0:L(e,"",a.thatReturnsNull,null)},toArray:function(e){var t=[];return B(e,t,null,a.thatReturnsArgument),t},only:function(e){return w(e)||d("143"),e}},Component:y,PureComponent:h,unstable_AsyncComponent:g,Fragment:f,createElement:j,cloneElement:function(e,t,n){var o=r({},e.props),a=e.key,c=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(c=t.ref,s=O.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var i=e.type.defaultProps;for(u in t)_.call(t,u)&&!k.hasOwnProperty(u)&&(o[u]=void 0===t[u]&&void 0!==i?i[u]:t[u])}var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){i=Array(u);for(var f=0;f<u;f++)i[f]=arguments[f+2];o.children=i}return{$$typeof:l,type:e.type,key:a,ref:c,props:o,_owner:s}},createFactory:function(e){var t=j.bind(null,e);return t.type=e,t},isValidElement:w,version:"16.2.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:O,assign:r}},$=Object.freeze({default:T}),I=$&&T||$;e.exports=I.default?I.default:I},22:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(1),c=(r=a)&&r.__esModule?r:{default:r};function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var u=function(e){function t(e){return l(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return i(t,c.default.Component),o(t,[{key:"cambiarVista",value:function(e){var t=document.getElementsByClassName("view-screen"),n=void 0,r=document.getElementsByClassName("display-content"),o=void 0;if(document.getElementById("teamTitle").classList.remove("show"),document.getElementById("teamTitle").classList.add("hide"),r[0]){r[0].classList.add("reduce-content"),r[0].classList.remove("display-content"),document.getElementsByClassName("target")[0].classList.remove("target"),e.target.classList.add("target");for(var a=0;a<t.length;a++)if(t[a].classList.contains("target")){n=a;break}document.getElementsByClassName("content-container")[n].classList.remove("reduce-content"),document.getElementsByClassName("content-container")[n].classList.add("display-content")}else{e.target.classList.add("target");for(var c=0;c<t.length;c++)if(t[c].classList.contains("target")){n=c;break}for(document.getElementsByClassName("content-container")[n].classList.remove("default-content"),document.getElementsByClassName("content-container")[n].classList.add("display-content"),o=document.getElementsByClassName("default-content");o.length>0;)o[0].classList.add("reduce-content"),o[0].classList.remove("default-content")}}},{key:"render",value:function(){var e=this,t=0;return c.default.createElement("div",{className:"presentation-container flex-center"},c.default.createElement("h1",{id:"teamTitle"},"LEARN, TRANSFORM AND CONNECT"),c.default.createElement("div",{className:"flex-presentation"},this.props.datos.map(function(n){return c.default.createElement(f,{datos:n,key:n.nombre+t++,onClick:e.cambiarVista.bind(e)})})))}}]),t}();t.default=u;var f=function(e){function t(e){return l(this,t),s(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return i(t,c.default.Component),o(t,[{key:"cerrarVista",value:function(){var e=document.getElementsByClassName("display-content"),t=document.getElementsByClassName("reduce-content");for(e[0].classList.add("default-content"),e[0].classList.remove("display-content");t.length>0;)t[0].classList.add("default-content"),t[0].classList.remove("reduce-content");document.getElementsByClassName("target")[0].classList.remove("target"),document.getElementById("teamTitle").classList.remove("hide"),document.getElementById("teamTitle").classList.add("show")}},{key:"render",value:function(){return c.default.createElement("div",{className:"content-container default-content"},c.default.createElement("div",{className:"view-content"},c.default.createElement("div",{className:"img",style:{backgroundImage:"url("+this.props.datos.img+")"}}),c.default.createElement("div",{className:"content"},c.default.createElement("i",{className:"icon icon-arrow_back",onClick:this.cerrarVista}),c.default.createElement("div",{className:"info"},c.default.createElement("h2",null,this.props.datos.nombre),c.default.createElement("h3",null,this.props.datos.cargo),c.default.createElement("p",null,this.props.datos.descripcion)),c.default.createElement("div",{className:"redes"}),c.default.createElement("div",{className:"logo"}))),c.default.createElement("div",{className:"view-screen",style:{zIndex:5},onClick:this.props.onClick}))}}]),t}()},5:function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},8:function(e,t,n){"use strict";e.exports={}},9:function(e,t,n){"use strict";var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,c,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),s=1;s<arguments.length;s++){for(var i in n=Object(arguments[s]))o.call(n,i)&&(l[i]=n[i]);if(r){c=r(n);for(var u=0;u<c.length;u++)a.call(n,c[u])&&(l[c[u]]=n[c[u]])}}return l}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3ByZXNlbnRhdGlvbi1jb250YWluZXIvcHJlc2VudGF0aW9uLmpzeCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlGdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvZW1wdHlPYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwidmFsdWUiLCJuIiwiX19lc01vZHVsZSIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInEiLCJTeW1ib2wiLCJ0IiwidSIsInYiLCJ3IiwieCIsIml0ZXJhdG9yIiwieSIsImEiLCJiIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkVycm9yIiwiZnJhbWVzVG9Qb3AiLCJ6IiwiaXNNb3VudGVkIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsIkEiLCJ0aGlzIiwicHJvcHMiLCJjb250ZXh0IiwicmVmcyIsInVwZGF0ZXIiLCJCIiwiQyIsImlzUmVhY3RDb21wb25lbnQiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiRCIsIkUiLCJjb25zdHJ1Y3RvciIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiRiIsInVuc3RhYmxlX2lzQXN5bmNSZWFjdENvbXBvbmVudCIsInJlbmRlciIsImNoaWxkcmVuIiwiRyIsImN1cnJlbnQiLCJIIiwiSSIsImtleSIsInJlZiIsIl9fc2VsZiIsIl9fc291cmNlIiwiSiIsImciLCJrIiwiZiIsImgiLCJBcnJheSIsImRlZmF1bHRQcm9wcyIsIiQkdHlwZW9mIiwidHlwZSIsIl9vd25lciIsIksiLCJMIiwiTSIsIk4iLCJwb3AiLCJyZXN1bHQiLCJrZXlQcmVmaXgiLCJmdW5jIiwiY291bnQiLCJPIiwicHVzaCIsIlAiLCJRIiwiaXNBcnJheSIsIm5leHQiLCJkb25lIiwia2V5cyIsImpvaW4iLCI9IiwiOiIsInJlcGxhY2UiLCJlc2NhcGUiLCJ0b1N0cmluZyIsIlIiLCJTIiwiVCIsInRoYXRSZXR1cm5zQXJndW1lbnQiLCJVIiwiQ2hpbGRyZW4iLCJtYXAiLCJmb3JFYWNoIiwidGhhdFJldHVybnNOdWxsIiwidG9BcnJheSIsIm9ubHkiLCJDb21wb25lbnQiLCJQdXJlQ29tcG9uZW50IiwidW5zdGFibGVfQXN5bmNDb21wb25lbnQiLCJGcmFnbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVGYWN0b3J5IiwiYmluZCIsImlzVmFsaWRFbGVtZW50IiwidmVyc2lvbiIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwiUmVhY3RDdXJyZW50T3duZXIiLCJhc3NpZ24iLCJWIiwiZnJlZXplIiwiZGVmYXVsdCIsIlciLCJfcmVhY3QiLCJQcmVzZW50YXRpb25GcmFtZSIsIl9jbGFzc0NhbGxDaGVjayIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiX19wcm90b19fIiwiZ2V0UHJvdG90eXBlT2YiLCJfcmVhY3QyIiwiZXYiLCJpbWFnZXMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJpbmRleCIsInZpc3RhQWJpZXJ0YSIsInZpc3RhcyIsImdldEVsZW1lbnRCeUlkIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiYWRkIiwidGFyZ2V0IiwiY29udGFpbnMiLCJfdGhpczIiLCJjbGFzc05hbWUiLCJpZCIsImRhdG9zIiwiaXRlbSIsIlByZXNlbnRhdGlvbkl0ZW0iLCJub21icmUiLCJvbkNsaWNrIiwiY2FtYmlhclZpc3RhIiwic3R5bGUiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJpbWciLCJjZXJyYXJWaXN0YSIsImNhcmdvIiwiZGVzY3JpcGNpb24iLCJ6SW5kZXgiLCJtYWtlRW1wdHlGdW5jdGlvbiIsImFyZyIsImVtcHR5RnVuY3Rpb24iLCJ0aGF0UmV0dXJucyIsInRoYXRSZXR1cm5zRmFsc2UiLCJ0aGF0UmV0dXJuc1RydWUiLCJ0aGF0UmV0dXJuc1RoaXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImZyb21DaGFyQ29kZSIsInRlc3QzIiwic3BsaXQiLCJsZXR0ZXIiLCJlcnIiLCJzaG91bGRVc2VOYXRpdmUiLCJzb3VyY2UiLCJmcm9tIiwic3ltYm9scyIsInRvIiwidmFsIiwidW5kZWZpbmVkIiwiVHlwZUVycm9yIiwidG9PYmplY3QiXSwibWFwcGluZ3MiOiJhQUNBLElBQUFBLEtBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsSUFDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxZQVVBLE9BTkFJLEVBQUFMLEdBQUFNLEtBQUFKLEVBQUFELFFBQUFDLElBQUFELFFBQUFGLEdBR0FHLEVBQUFFLEdBQUEsRUFHQUYsRUFB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QTBCLFVBQUFaLElBR0FGLEVBQUFuQixLQUFBNkwsRUFBQTFILEtBQ0E0SCxFQUFBNUgsR0FBQTBILEVBQUExSCxJQUlBLEdBQUE0RyxFQUFBLENBQ0FlLEVBQUFmLEVBQUFjLEdBQ0EsUUFBQWhNLEVBQUEsRUFBa0JBLEVBQUFpTSxFQUFBNUosT0FBb0JyQyxJQUN0Q21MLEVBQUFoTCxLQUFBNkwsRUFBQUMsRUFBQWpNLE1BQ0FrTSxFQUFBRCxFQUFBak0sSUFBQWdNLEVBQUFDLEVBQUFqTSxNQU1BLE9BQUFrTSIsImZpbGUiOiJwcmVzZW50YXRpb24ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL3Rlc3Rpbmcvc2l0ZS9kaXN0L1wiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMjIpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjIuMFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7dmFyIG09cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj1yZXF1aXJlKFwiZmJqcy9saWIvZW1wdHlPYmplY3RcIikscD1yZXF1aXJlKFwiZmJqcy9saWIvZW1wdHlGdW5jdGlvblwiKSxxPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbFtcImZvclwiXSxyPXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyx0PXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QuY2FsbFwiKTo2MDEwNCx1PXE/U3ltYm9sW1wiZm9yXCJdKFwicmVhY3QucmV0dXJuXCIpOjYwMTA1LHY9cT9TeW1ib2xbXCJmb3JcIl0oXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsdz1xP1N5bWJvbFtcImZvclwiXShcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LHg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO1xuZnVuY3Rpb24geShhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGU9XCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgaHR0cDovL2ZhY2Vib29rLmdpdGh1Yi5pby9yZWFjdC9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnRcXHgzZFwiK2EsYz0wO2M8YjtjKyspZSs9XCJcXHgyNmFyZ3NbXVxceDNkXCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjKzFdKTtiPUVycm9yKGUrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwiKTtiLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCI7Yi5mcmFtZXNUb1BvcD0xO3Rocm93IGI7fVxudmFyIHo9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319O2Z1bmN0aW9uIEEoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9bjt0aGlzLnVwZGF0ZXI9ZXx8en1BLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0EucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7XCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YT95KFwiODVcIik6dm9pZCAwO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07QS5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBCKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPW47dGhpcy51cGRhdGVyPWV8fHp9ZnVuY3Rpb24gQygpe31DLnByb3RvdHlwZT1BLnByb3RvdHlwZTt2YXIgRD1CLnByb3RvdHlwZT1uZXcgQztELmNvbnN0cnVjdG9yPUI7bShELEEucHJvdG90eXBlKTtELmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO2Z1bmN0aW9uIEUoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9bjt0aGlzLnVwZGF0ZXI9ZXx8en12YXIgRj1FLnByb3RvdHlwZT1uZXcgQztGLmNvbnN0cnVjdG9yPUU7bShGLEEucHJvdG90eXBlKTtGLnVuc3RhYmxlX2lzQXN5bmNSZWFjdENvbXBvbmVudD0hMDtGLnJlbmRlcj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnByb3BzLmNoaWxkcmVufTt2YXIgRz17Y3VycmVudDpudWxsfSxIPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksST17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gSihhLGIsZSl7dmFyIGMsZD17fSxnPW51bGwsaz1udWxsO2lmKG51bGwhPWIpZm9yKGMgaW4gdm9pZCAwIT09Yi5yZWYmJihrPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilILmNhbGwoYixjKSYmIUkuaGFzT3duUHJvcGVydHkoYykmJihkW2NdPWJbY10pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWU7ZWxzZSBpZigxPGYpe2Zvcih2YXIgaD1BcnJheShmKSxsPTA7bDxmO2wrKyloW2xdPWFyZ3VtZW50c1tsKzJdO2QuY2hpbGRyZW49aH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoYyBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtjXSYmKGRbY109ZltjXSk7cmV0dXJueyQkdHlwZW9mOnIsdHlwZTphLGtleTpnLHJlZjprLHByb3BzOmQsX293bmVyOkcuY3VycmVudH19ZnVuY3Rpb24gSyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09cn1cbmZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCJcXHgzZFwiOlwiXFx4M2QwXCIsXCI6XCI6XCJcXHgzZDJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIEw9L1xcLysvZyxNPVtdO2Z1bmN0aW9uIE4oYSxiLGUsYyl7aWYoTS5sZW5ndGgpe3ZhciBkPU0ucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1lO2QuY29udGV4dD1jO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzplLGNvbnRleHQ6Yyxjb3VudDowfX1mdW5jdGlvbiBPKGEpe2EucmVzdWx0PW51bGw7YS5rZXlQcmVmaXg9bnVsbDthLmZ1bmM9bnVsbDthLmNvbnRleHQ9bnVsbDthLmNvdW50PTA7MTA+TS5sZW5ndGgmJk0ucHVzaChhKX1cbmZ1bmN0aW9uIFAoYSxiLGUsYyl7dmFyIGQ9dHlwZW9mIGE7aWYoXCJ1bmRlZmluZWRcIj09PWR8fFwiYm9vbGVhblwiPT09ZClhPW51bGw7dmFyIGc9ITE7aWYobnVsbD09PWEpZz0hMDtlbHNlIHN3aXRjaChkKXtjYXNlIFwic3RyaW5nXCI6Y2FzZSBcIm51bWJlclwiOmc9ITA7YnJlYWs7Y2FzZSBcIm9iamVjdFwiOnN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHI6Y2FzZSB0OmNhc2UgdTpjYXNlIHY6Zz0hMH19aWYoZylyZXR1cm4gZShjLGEsXCJcIj09PWI/XCIuXCIrUShhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaz0wO2s8YS5sZW5ndGg7aysrKXtkPWFba107dmFyIGY9YitRKGQsayk7Zys9UChkLGYsZSxjKX1lbHNlIGlmKG51bGw9PT1hfHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGE/Zj1udWxsOihmPXgmJmFbeF18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1cbmYuY2FsbChhKSxrPTA7IShkPWEubmV4dCgpKS5kb25lOylkPWQudmFsdWUsZj1iK1EoZCxrKyspLGcrPVAoZCxmLGUsYyk7ZWxzZVwib2JqZWN0XCI9PT1kJiYoZT1cIlwiK2EseShcIjMxXCIsXCJbb2JqZWN0IE9iamVjdF1cIj09PWU/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6ZSxcIlwiKSk7cmV0dXJuIGd9ZnVuY3Rpb24gUShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShhLmtleSk6Yi50b1N0cmluZygzNil9ZnVuY3Rpb24gUihhLGIpe2EuZnVuYy5jYWxsKGEuY29udGV4dCxiLGEuY291bnQrKyl9XG5mdW5jdGlvbiBTKGEsYixlKXt2YXIgYz1hLnJlc3VsdCxkPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1QoYSxjLGUscC50aGF0UmV0dXJuc0FyZ3VtZW50KTpudWxsIT1hJiYoSyhhKSYmKGI9ZCsoIWEua2V5fHxiJiZiLmtleT09PWEua2V5P1wiXCI6KFwiXCIrYS5rZXkpLnJlcGxhY2UoTCxcIiRcXHgyNi9cIikrXCIvXCIpK2UsYT17JCR0eXBlb2Y6cix0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9KSxjLnB1c2goYSkpfWZ1bmN0aW9uIFQoYSxiLGUsYyxkKXt2YXIgZz1cIlwiO251bGwhPWUmJihnPShcIlwiK2UpLnJlcGxhY2UoTCxcIiRcXHgyNi9cIikrXCIvXCIpO2I9TihiLGcsYyxkKTtudWxsPT1hfHxQKGEsXCJcIixTLGIpO08oYil9XG52YXIgVT17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtUKGEsYyxudWxsLGIsZSk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1OKG51bGwsbnVsbCxiLGUpO251bGw9PWF8fFAoYSxcIlwiLFIsYik7TyhiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIG51bGw9PWE/MDpQKGEsXCJcIixwLnRoYXRSZXR1cm5zTnVsbCxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtUKGEsYixudWxsLHAudGhhdFJldHVybnNBcmd1bWVudCk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7SyhhKT92b2lkIDA6eShcIjE0M1wiKTtyZXR1cm4gYX19LENvbXBvbmVudDpBLFB1cmVDb21wb25lbnQ6Qix1bnN0YWJsZV9Bc3luY0NvbXBvbmVudDpFLEZyYWdtZW50OncsY3JlYXRlRWxlbWVudDpKLGNsb25lRWxlbWVudDpmdW5jdGlvbihhLGIsZSl7dmFyIGM9bSh7fSxhLnByb3BzKSxcbmQ9YS5rZXksZz1hLnJlZixrPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoZz1iLnJlZixrPUcuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZj1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihoIGluIGIpSC5jYWxsKGIsaCkmJiFJLmhhc093blByb3BlcnR5KGgpJiYoY1toXT12b2lkIDA9PT1iW2hdJiZ2b2lkIDAhPT1mP2ZbaF06YltoXSl9dmFyIGg9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1oKWMuY2hpbGRyZW49ZTtlbHNlIGlmKDE8aCl7Zj1BcnJheShoKTtmb3IodmFyIGw9MDtsPGg7bCsrKWZbbF09YXJndW1lbnRzW2wrMl07Yy5jaGlsZHJlbj1mfXJldHVybnskJHR5cGVvZjpyLHR5cGU6YS50eXBlLGtleTpkLHJlZjpnLHByb3BzOmMsX293bmVyOmt9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPUouYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxcbmlzVmFsaWRFbGVtZW50OkssdmVyc2lvbjpcIjE2LjIuMFwiLF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntSZWFjdEN1cnJlbnRPd25lcjpHLGFzc2lnbjptfX0sVj1PYmplY3QuZnJlZXplKHtkZWZhdWx0OlV9KSxXPVYmJlV8fFY7bW9kdWxlLmV4cG9ydHM9V1tcImRlZmF1bHRcIl0/V1tcImRlZmF1bHRcIl06VztcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcmVzZW50YXRpb25GcmFtZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcblxyXG5cdGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcblx0XHRzdXBlcihwcm9wcyk7XHJcblx0fVxyXG5cclxuXHRjYW1iaWFyVmlzdGEoZXYpIHtcclxuXHRcdGxldCBpbWFnZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd2aWV3LXNjcmVlbicpLFxyXG5cdFx0XHRpbmRleCwgICAgICAgIFxyXG5cdFx0XHR2aXN0YUFiaWVydGEgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdkaXNwbGF5LWNvbnRlbnQnKSxcclxuXHRcdFx0dmlzdGFzO1xyXG5cclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0ZWFtVGl0bGUnKS5jbGFzc0xpc3QucmVtb3ZlKCdzaG93Jyk7XHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGVhbVRpdGxlJykuY2xhc3NMaXN0LmFkZCgnaGlkZScpO1xyXG4gICAgICAgIFxyXG5cclxuXHRcdC8vIENlcnJhbW9zIGxhcyB2aXN0YXMgc2kgaGF5IGFsZ3VuYSBhYmllcnRhXHJcblx0XHRpZiAodmlzdGFBYmllcnRhWzBdKSB7XHJcblx0XHRcdHZpc3RhQWJpZXJ0YVswXS5jbGFzc0xpc3QuYWRkKCdyZWR1Y2UtY29udGVudCcpO1xyXG5cdFx0XHR2aXN0YUFiaWVydGFbMF0uY2xhc3NMaXN0LnJlbW92ZSgnZGlzcGxheS1jb250ZW50Jyk7XHJcbiAgICAgICAgICAgIFxyXG5cdFx0XHRkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd0YXJnZXQnKVswXS5jbGFzc0xpc3QucmVtb3ZlKCd0YXJnZXQnKTtcclxuXHJcblx0XHRcdC8vIEVsIHRhcmdldCBlcyBsYSBpbWFnZW5cclxuXHRcdFx0ZXYudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ3RhcmdldCcpOyAgICAgICAgXHJcbiAgICAgICAgICAgIFxyXG5cdFx0XHRmb3IgKGxldCBpID0gMDsgaSA8IGltYWdlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRcdGlmIChpbWFnZXNbaV0uY2xhc3NMaXN0LmNvbnRhaW5zKCd0YXJnZXQnKSkge1xyXG5cdFx0XHRcdFx0aW5kZXggPSBpO1xyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcbiAgICAgICAgICAgIFxyXG5cdFx0XHQvLyBBYnJpbW9zIGxhIHZpc3RhXHJcblx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NvbnRlbnQtY29udGFpbmVyJylbaW5kZXhdLmNsYXNzTGlzdC5yZW1vdmUoJ3JlZHVjZS1jb250ZW50Jyk7XHJcblx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NvbnRlbnQtY29udGFpbmVyJylbaW5kZXhdLmNsYXNzTGlzdC5hZGQoJ2Rpc3BsYXktY29udGVudCcpO1xyXG4gICAgICAgICAgICAgICAgIFxyXG5cdFx0fSBlbHNlIHtcclxuICAgICAgICAgICAgXHJcblx0XHRcdC8vIEVsIHRhcmdldCBlcyBsYSBpbWFnZW5cclxuXHRcdFx0ZXYudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ3RhcmdldCcpOyAgICAgICAgXHJcbiAgICAgICAgICAgIFxyXG5cdFx0XHRmb3IgKGxldCBpID0gMDsgaSA8IGltYWdlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRcdGlmIChpbWFnZXNbaV0uY2xhc3NMaXN0LmNvbnRhaW5zKCd0YXJnZXQnKSkge1xyXG5cdFx0XHRcdFx0aW5kZXggPSBpO1xyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcbiAgICAgICAgICAgIFxyXG5cdFx0XHQvLyBBYnJpbW9zIGxhIHZpc3RhXHJcblx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2NvbnRlbnQtY29udGFpbmVyJylbaW5kZXhdLmNsYXNzTGlzdC5yZW1vdmUoJ2RlZmF1bHQtY29udGVudCcpO1xyXG5cdFx0XHRkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdjb250ZW50LWNvbnRhaW5lcicpW2luZGV4XS5jbGFzc0xpc3QuYWRkKCdkaXNwbGF5LWNvbnRlbnQnKTtcclxuXHJcblx0XHRcdC8vIE1pbmltaXphbW9zIGxhcyBvdHJhcyB2aXN0YXNcclxuXHRcdFx0dmlzdGFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnZGVmYXVsdC1jb250ZW50Jyk7XHJcblx0XHRcdHdoaWxlICh2aXN0YXMubGVuZ3RoID4gMCkge1xyXG5cdFx0XHRcdHZpc3Rhc1swXS5jbGFzc0xpc3QuYWRkKCdyZWR1Y2UtY29udGVudCcpO1xyXG5cdFx0XHRcdHZpc3Rhc1swXS5jbGFzc0xpc3QucmVtb3ZlKCdkZWZhdWx0LWNvbnRlbnQnKTtcclxuXHRcdFx0fVxyXG5cdFx0fSAgICAgICAgXHJcbiAgICAgICAgXHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHRyZW5kZXIoKSB7XHJcblx0XHRsZXQgaSA9IDA7XHJcblx0XHRyZXR1cm4gKFxyXG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT0ncHJlc2VudGF0aW9uLWNvbnRhaW5lciBmbGV4LWNlbnRlcic+XHJcblx0XHRcdFx0PGgxIGlkPSd0ZWFtVGl0bGUnPkxFQVJOLCBUUkFOU0ZPUk0gQU5EIENPTk5FQ1Q8L2gxPlxyXG5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzTmFtZT0nZmxleC1wcmVzZW50YXRpb24nPlxyXG5cdFx0XHRcdFx0e3RoaXMucHJvcHMuZGF0b3MubWFwKGl0ZW0gPT4gPFByZXNlbnRhdGlvbkl0ZW0gZGF0b3M9e2l0ZW19IGtleT17aXRlbS5ub21icmUgKyBpKyt9IG9uQ2xpY2s9e3RoaXMuY2FtYmlhclZpc3RhLmJpbmQodGhpcyl9Lz4pfVxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG4gICAgICAgIFxyXG5cdH1cclxuXHJcbn1cclxuXHJcbmNsYXNzIFByZXNlbnRhdGlvbkl0ZW0gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cclxuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG5cdFx0c3VwZXIocHJvcHMpO1xyXG5cclxuXHR9XHJcbiAgICBcclxuXHRjZXJyYXJWaXN0YSgpIHtcclxuXHRcdC8vIENvbG9jYW1vcyB0b2RhcyBsYXMgdmlzdGFzIHBvciBkZWZlY3RvXHJcblx0XHRsZXQgdmlzdGFBYmllcnRhID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnZGlzcGxheS1jb250ZW50JyksXHJcblx0XHRcdHZpc3RhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3JlZHVjZS1jb250ZW50Jyk7XHJcblxyXG5cdFx0dmlzdGFBYmllcnRhWzBdLmNsYXNzTGlzdC5hZGQoJ2RlZmF1bHQtY29udGVudCcpO1xyXG5cdFx0dmlzdGFBYmllcnRhWzBdLmNsYXNzTGlzdC5yZW1vdmUoJ2Rpc3BsYXktY29udGVudCcpO1xyXG4gICAgICAgIFxyXG5cdFx0Ly8gRGVmYXVsdCBlbCByZXN0b1xyXG5cdFx0d2hpbGUgKHZpc3Rhcy5sZW5ndGggPiAwKSB7XHJcblx0XHRcdHZpc3Rhc1swXS5jbGFzc0xpc3QuYWRkKCdkZWZhdWx0LWNvbnRlbnQnKTtcclxuXHRcdFx0dmlzdGFzWzBdLmNsYXNzTGlzdC5yZW1vdmUoJ3JlZHVjZS1jb250ZW50Jyk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gUXVpdGFtb3MgZWwgdGFyZ2V0XHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd0YXJnZXQnKVswXS5jbGFzc0xpc3QucmVtb3ZlKCd0YXJnZXQnKTtcclxuXHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGVhbVRpdGxlJykuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZScpO1xyXG5cdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RlYW1UaXRsZScpLmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTtcclxuXHR9XHJcblxyXG5cdHJlbmRlcigpIHtcclxuXHRcdHJldHVybiAoXHJcblx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250ZW50LWNvbnRhaW5lciBkZWZhdWx0LWNvbnRlbnQnPlxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSd2aWV3LWNvbnRlbnQnPlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2ltZycgc3R5bGU9e3sgYmFja2dyb3VuZEltYWdlOiAndXJsKCcgKyB0aGlzLnByb3BzLmRhdG9zLmltZyArICcpJyB9fSAvPlxyXG5cclxuXHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdjb250ZW50Jz5cclxuXHJcblx0XHRcdFx0XHRcdDxpIGNsYXNzTmFtZT0naWNvbiBpY29uLWFycm93X2JhY2snIG9uQ2xpY2s9e3RoaXMuY2VycmFyVmlzdGF9Lz5cclxuXHJcblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdpbmZvJz5cclxuXHRcdFx0XHRcdFx0XHQ8aDI+e3RoaXMucHJvcHMuZGF0b3Mubm9tYnJlfTwvaDI+XHJcblx0XHRcdFx0XHRcdFx0PGgzPnt0aGlzLnByb3BzLmRhdG9zLmNhcmdvfTwvaDM+XHJcblx0XHRcdFx0XHRcdFx0PHA+e3RoaXMucHJvcHMuZGF0b3MuZGVzY3JpcGNpb259PC9wPlxyXG5cdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHJcblx0XHRcdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSdyZWRlcycgLz5cclxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzc05hbWU9J2xvZ28nIC8+XHJcblxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblxyXG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPSd2aWV3LXNjcmVlbicgc3R5bGU9e3sgekluZGV4OiA1IH19IG9uQ2xpY2s9e3RoaXMucHJvcHMub25DbGlja30gLz5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHQpO1xyXG5cdH1cclxufVxyXG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBlbXB0eU9iamVjdCA9IHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBPYmplY3QuZnJlZXplKGVtcHR5T2JqZWN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlbXB0eU9iamVjdDsiLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==