!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/dist/",n(n.s=21)}({1:function(e,t,n){"use strict";e.exports=n(11)},11:function(e,t,n){"use strict";var r=n(9),o=n(8),a=n(5),u="function"==typeof Symbol&&Symbol.for,l=u?Symbol.for("react.element"):60103,i=u?Symbol.for("react.call"):60104,c=u?Symbol.for("react.return"):60105,f=u?Symbol.for("react.portal"):60106,s=u?Symbol.for("react.fragment"):60107,p="function"==typeof Symbol&&Symbol.iterator;function d(e){for(var t=arguments.length-1,n="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);throw(t=Error(n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.")).name="Invariant Violation",t.framesToPop=1,t}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function m(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||y}function h(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||y}function v(){}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&d("85"),this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=m.prototype;var b=h.prototype=new v;function g(e,t,n){this.props=e,this.context=t,this.refs=o,this.updater=n||y}b.constructor=h,r(b,m.prototype),b.isPureReactComponent=!0;var E=g.prototype=new v;E.constructor=g,r(E,m.prototype),E.unstable_isAsyncReactComponent=!0,E.render=function(){return this.props.children};var O={current:null},w=Object.prototype.hasOwnProperty,_={key:!0,ref:!0,__self:!0,__source:!0};function j(e,t,n){var r,o={},a=null,u=null;if(null!=t)for(r in void 0!==t.ref&&(u=t.ref),void 0!==t.key&&(a=""+t.key),t)w.call(t,r)&&!_.hasOwnProperty(r)&&(o[r]=t[r]);var i=arguments.length-2;if(1===i)o.children=n;else if(1<i){for(var c=Array(i),f=0;f<i;f++)c[f]=arguments[f+2];o.children=c}if(e&&e.defaultProps)for(r in i=e.defaultProps)void 0===o[r]&&(o[r]=i[r]);return{$$typeof:l,type:e,key:a,ref:u,props:o,_owner:O.current}}function k(e){return"object"==typeof e&&null!==e&&e.$$typeof===l}var x=/\/+/g,C=[];function P(e,t,n,r){if(C.length){var o=C.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function S(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>C.length&&C.push(e)}function R(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var a=!1;if(null===e)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case l:case i:case c:case f:a=!0}}if(a)return n(r,e,""===t?"."+N(e,0):t),1;if(a=0,t=""===t?".":t+":",Array.isArray(e))for(var u=0;u<e.length;u++){var s=t+N(o=e[u],u);a+=R(o,s,n,r)}else if(null===e||void 0===e?s=null:s="function"==typeof(s=p&&e[p]||e["@@iterator"])?s:null,"function"==typeof s)for(e=s.call(e),u=0;!(o=e.next()).done;)a+=R(o=o.value,s=t+N(o,u++),n,r);else"object"===o&&d("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return a}function N(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function A(e,t){e.func.call(e.context,t,e.count++)}function T(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?$(e,r,n,a.thatReturnsArgument):null!=e&&(k(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(x,"$&/")+"/")+n,e={$$typeof:l,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function $(e,t,n,r,o){var a="";null!=n&&(a=(""+n).replace(x,"$&/")+"/"),t=P(t,a,r,o),null==e||R(e,"",T,t),S(t)}var I={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return $(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=P(null,null,t,n),null==e||R(e,"",A,t),S(t)},count:function(e){return null==e?0:R(e,"",a.thatReturnsNull,null)},toArray:function(e){var t=[];return $(e,t,null,a.thatReturnsArgument),t},only:function(e){return k(e)||d("143"),e}},Component:m,PureComponent:h,unstable_AsyncComponent:g,Fragment:s,createElement:j,cloneElement:function(e,t,n){var o=r({},e.props),a=e.key,u=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(u=t.ref,i=O.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(f in t)w.call(t,f)&&!_.hasOwnProperty(f)&&(o[f]=void 0===t[f]&&void 0!==c?c[f]:t[f])}var f=arguments.length-2;if(1===f)o.children=n;else if(1<f){c=Array(f);for(var s=0;s<f;s++)c[s]=arguments[s+2];o.children=c}return{$$typeof:l,type:e.type,key:a,ref:u,props:o,_owner:i}},createFactory:function(e){var t=j.bind(null,e);return t.type=e,t},isValidElement:k,version:"16.2.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:O,assign:r}},F=Object.freeze({default:I}),M=F&&I||F;e.exports=M.default?M.default:M},21:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=n(1),u=(r=a)&&r.__esModule?r:{default:r};var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={view:1},n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,u.default.Component),o(t,[{key:"mostrarFormulario",value:function(){var e=document.getElementById("displayEmail"),t=document.getElementById("displayContact");e.classList.remove("active"),t.classList.add("active"),this.setState({view:0})}},{key:"mostrarCorreo",value:function(){var e=document.getElementById("displayEmail"),t=document.getElementById("displayContact");e.classList.add("active"),t.classList.remove("active"),this.setState({view:1})}},{key:"render",value:function(){var e,t=u.default.createElement("div",{className:"form-view flex-center"},u.default.createElement("form",{className:"grid-container"},u.default.createElement("input",{type:"text",placeholder:"Name"}),u.default.createElement("input",{type:"email",placeholder:"Email"}),u.default.createElement("input",{type:"phone",placeholder:"Phone"}),u.default.createElement("input",{type:"text",placeholder:"Address"}),u.default.createElement("textarea",{name:"comentario",placeholder:"Comment",id:"",rows:"10"}),u.default.createElement("input",{type:"submit",value:"SUBMIT"}))),n=u.default.createElement("div",{className:"form-view"},u.default.createElement("div",{className:"flex-center"},u.default.createElement("img",{src:"src/img/mail-icon.png"}),u.default.createElement("p",null,"contacto@groowly.com")));switch(this.state.view){case 1:e=n;break;default:e=t}return u.default.createElement("div",{className:"form-contact"},u.default.createElement("h1",null,"CONTACT"),u.default.createElement("p",null,"Comentario genial!"),u.default.createElement("div",{className:"btn-actions"},u.default.createElement("div",{className:"btn-container"},u.default.createElement("button",{className:"flex-center active",id:"displayEmail",onClick:this.mostrarCorreo.bind(this)},"CONTACT"),u.default.createElement("button",{className:"flex-center",id:"displayContact",onClick:this.mostrarFormulario.bind(this)},"FORM"))),e)}}]),t}();t.default=l},5:function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},8:function(e,t,n){"use strict";e.exports={}},9:function(e,t,n){"use strict";var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,u,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),i=1;i<arguments.length;i++){for(var c in n=Object(arguments[i]))o.call(n,c)&&(l[c]=n[c]);if(r){u=r(n);for(var f=0;f<u.length;f++)a.call(n,u[f])&&(l[u[f]]=n[u[f]])}}return l}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,