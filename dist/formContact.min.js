!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/testing/site/",r(r.s=21)}({1:function(e,t,r){"use strict";e.exports=r(11)},11:function(e,t,r){"use strict";var n=r(9),o=r(8),u=r(5),a="function"==typeof Symbol&&Symbol.for,l=a?Symbol.for("react.element"):60103,i=a?Symbol.for("react.call"):60104,c=a?Symbol.for("react.return"):60105,f=a?Symbol.for("react.portal"):60106,s=a?Symbol.for("react.fragment"):60107,p="function"==typeof Symbol&&Symbol.iterator;function d(e){for(var t=arguments.length-1,r="Minified React error #"+e+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant="+e,n=0;n<t;n++)r+="&args[]="+encodeURIComponent(arguments[n+1]);throw(t=Error(r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.")).name="Invariant Violation",t.framesToPop=1,t}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function m(e,t,r){this.props=e,this.context=t,this.refs=o,this.updater=r||y}function h(e,t,r){this.props=e,this.context=t,this.refs=o,this.updater=r||y}function v(){}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&d("85"),this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=m.prototype;var b=h.prototype=new v;function g(e,t,r){this.props=e,this.context=t,this.refs=o,this.updater=r||y}b.constructor=h,n(b,m.prototype),b.isPureReactComponent=!0;var O=g.prototype=new v;O.constructor=g,n(O,m.prototype),O.unstable_isAsyncReactComponent=!0,O.render=function(){return this.props.children};var w={current:null},_=Object.prototype.hasOwnProperty,j={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,r){var n,o={},u=null,a=null;if(null!=t)for(n in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(u=""+t.key),t)_.call(t,n)&&!j.hasOwnProperty(n)&&(o[n]=t[n]);var i=arguments.length-2;if(1===i)o.children=r;else if(1<i){for(var c=Array(i),f=0;f<i;f++)c[f]=arguments[f+2];o.children=c}if(e&&e.defaultProps)for(n in i=e.defaultProps)void 0===o[n]&&(o[n]=i[n]);return{$$typeof:l,type:e,key:u,ref:a,props:o,_owner:w.current}}function k(e){return"object"==typeof e&&null!==e&&e.$$typeof===l}var x=/\/+/g,P=[];function S(e,t,r,n){if(P.length){var o=P.pop();return o.result=e,o.keyPrefix=t,o.func=r,o.context=n,o.count=0,o}return{result:e,keyPrefix:t,func:r,context:n,count:0}}function C(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>P.length&&P.push(e)}function R(e,t,r,n){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var u=!1;if(null===e)u=!0;else switch(o){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case l:case i:case c:case f:u=!0}}if(u)return r(n,e,""===t?"."+N(e,0):t),1;if(u=0,t=""===t?".":t+":",Array.isArray(e))for(var a=0;a<e.length;a++){var s=t+N(o=e[a],a);u+=R(o,s,r,n)}else if(null===e||void 0===e?s=null:s="function"==typeof(s=p&&e[p]||e["@@iterator"])?s:null,"function"==typeof s)for(e=s.call(e),a=0;!(o=e.next()).done;)u+=R(o=o.value,s=t+N(o,a++),r,n);else"object"===o&&d("31","[object Object]"===(r=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":r,"");return u}function N(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function A(e,t){e.func.call(e.context,t,e.count++)}function T(e,t,r){var n=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?$(e,n,r,u.thatReturnsArgument):null!=e&&(k(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(x,"$&/")+"/")+r,e={$$typeof:l,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),n.push(e))}function $(e,t,r,n,o){var u="";null!=r&&(u=(""+r).replace(x,"$&/")+"/"),t=S(t,u,n,o),null==e||R(e,"",T,t),C(t)}var q={Children:{map:function(e,t,r){if(null==e)return e;var n=[];return $(e,n,null,t,r),n},forEach:function(e,t,r){if(null==e)return e;t=S(null,null,t,r),null==e||R(e,"",A,t),C(t)},count:function(e){return null==e?0:R(e,"",u.thatReturnsNull,null)},toArray:function(e){var t=[];return $(e,t,null,u.thatReturnsArgument),t},only:function(e){return k(e)||d("143"),e}},Component:m,PureComponent:h,unstable_AsyncComponent:g,Fragment:s,createElement:E,cloneElement:function(e,t,r){var o=n({},e.props),u=e.key,a=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,i=w.current),void 0!==t.key&&(u=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(f in t)_.call(t,f)&&!j.hasOwnProperty(f)&&(o[f]=void 0===t[f]&&void 0!==c?c[f]:t[f])}var f=arguments.length-2;if(1===f)o.children=r;else if(1<f){c=Array(f);for(var s=0;s<f;s++)c[s]=arguments[s+2];o.children=c}return{$$typeof:l,type:e.type,key:u,ref:a,props:o,_owner:i}},createFactory:function(e){var t=E.bind(null,e);return t.type=e,t},isValidElement:k,version:"16.2.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:w,assign:n}},F=Object.freeze({default:q}),M=F&&q||F;e.exports=M.default?M.default:M},21:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,o=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),u=r(1),a=(n=u)&&n.__esModule?n:{default:n};var l=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var r=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.state={view:1},r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.default.Component),o(t,[{key:"mostrarFormulario",value:function(){this.setState({view:0})}},{key:"mostrarCorreo",value:function(){this.setState({view:1})}},{key:"render",value:function(){var e,t=a.default.createElement("div",{className:"form-view"},a.default.createElement("form",{className:"grid-container"},a.default.createElement("input",{type:"text",placeholder:"First Name and Last Name",required:!0}),a.default.createElement("input",{type:"email",placeholder:"Email",required:!0}),a.default.createElement("input",{type:"phone",placeholder:"Phone",required:!0}),a.default.createElement("input",{type:"text",placeholder:"Address",required:!0}),a.default.createElement("textarea",{name:"comentario",placeholder:"comment",id:"",rows:"10",required:!0}),a.default.createElement("input",{type:"submit",value:"SUBMIT"}))),r=a.default.createElement("div",{className:"form-view grid-container"},a.default.createElement("div",{className:"flex-center"},a.default.createElement("p",null,"contacto@groowly.com"),a.default.createElement("i",{className:"icon "})));switch(this.state.view){case 1:e=r;break;default:e=t}return a.default.createElement("div",{className:"form-contact"},a.default.createElement("h1",null,"CONTACT"),a.default.createElement("p",null,"Comentario genial!"),a.default.createElement("div",{className:"btn-actions"},a.default.createElement("div",{className:"btn-container"},a.default.createElement("button",{className:"flex-center",onClick:this.mostrarCorreo.bind(this)},"CONTACT"),a.default.createElement("button",{className:"flex-center",onClick:this.mostrarFormulario.bind(this)},"FORM"))),e)}}]),t}();t.default=l},5:function(e,t,r){"use strict";function n(e){return function(){return e}}var o=function(){};o.thatReturns=n,o.thatReturnsFalse=n(!1),o.thatReturnsTrue=n(!0),o.thatReturnsNull=n(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},8:function(e,t,r){"use strict";e.exports={}},9:function(e,t,r){"use strict";var n=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach(function(e){n[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var r,a,l=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),i=1;i<arguments.length;i++){for(var c in r=Object(arguments[i]))o.call(r,c)&&(l[c]=r[c]);if(n){a=n(r);for(var f=0;f<a.length;f++)u.call(r,a[f])&&(l[a[f]]=r[a[f]])}}return l}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,